// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: media.proto

//import "google/protobuf/duration.proto";

package media

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PacketType int32

const (
	PacketType_PacketVideo             PacketType = 0
	PacketType_PacketAudio             PacketType = 1
	PacketType_PacketMetaDataOnvif     PacketType = 2
	PacketType_PacketMetaDataAnalyzer  PacketType = 3
	PacketType_PacketEOF               PacketType = 4
	PacketType_PacketStop              PacketType = 5
	PacketType_PacketWebRTC            PacketType = 6
	PacketType_PacketReconnectingAlert PacketType = 7 // reconnecting alert
)

// Enum value maps for PacketType.
var (
	PacketType_name = map[int32]string{
		0: "PacketVideo",
		1: "PacketAudio",
		2: "PacketMetaDataOnvif",
		3: "PacketMetaDataAnalyzer",
		4: "PacketEOF",
		5: "PacketStop",
		6: "PacketWebRTC",
		7: "PacketReconnectingAlert",
	}
	PacketType_value = map[string]int32{
		"PacketVideo":             0,
		"PacketAudio":             1,
		"PacketMetaDataOnvif":     2,
		"PacketMetaDataAnalyzer":  3,
		"PacketEOF":               4,
		"PacketStop":              5,
		"PacketWebRTC":            6,
		"PacketReconnectingAlert": 7,
	}
)

func (x PacketType) Enum() *PacketType {
	p := new(PacketType)
	*p = x
	return p
}

func (x PacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_media_proto_enumTypes[0].Descriptor()
}

func (PacketType) Type() protoreflect.EnumType {
	return &file_media_proto_enumTypes[0]
}

func (x PacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketType.Descriptor instead.
func (PacketType) EnumDescriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultiplePackets []*PacketLocation `protobuf:"bytes,3,rep,name=multiple_packets,json=multiplePackets,proto3" json:"multiple_packets,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetMultiplePackets() []*PacketLocation {
	if x != nil {
		return x.MultiplePackets
	}
	return nil
}

type PacketLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlocIndex    int64      `protobuf:"varint,1,opt,name=blocIndex,proto3" json:"blocIndex,omitempty"`
	RestartIndex int32      `protobuf:"varint,2,opt,name=restartIndex,proto3" json:"restartIndex,omitempty"`
	Time         int64      `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	FrameType    PacketType `protobuf:"varint,4,opt,name=frameType,proto3,enum=media.PacketType" json:"frameType,omitempty"`
}

func (x *PacketLocation) Reset() {
	*x = PacketLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketLocation) ProtoMessage() {}

func (x *PacketLocation) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketLocation.ProtoReflect.Descriptor instead.
func (*PacketLocation) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{1}
}

func (x *PacketLocation) GetBlocIndex() int64 {
	if x != nil {
		return x.BlocIndex
	}
	return 0
}

func (x *PacketLocation) GetRestartIndex() int32 {
	if x != nil {
		return x.RestartIndex
	}
	return 0
}

func (x *PacketLocation) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PacketLocation) GetFrameType() PacketType {
	if x != nil {
		return x.FrameType
	}
	return PacketType_PacketVideo
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketType      PacketType `protobuf:"varint,1,opt,name=PacketType,proto3,enum=media.PacketType" json:"PacketType,omitempty"`
	Data            []byte     `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	CompositionTime int64      `protobuf:"varint,3,opt,name=compositionTime,proto3" json:"compositionTime,omitempty"`
	TimeSample      uint64     `protobuf:"varint,4,opt,name=TimeSample,proto3" json:"TimeSample,omitempty"`
	IsKeyFrame      bool       `protobuf:"varint,5,opt,name=IsKeyFrame,proto3" json:"IsKeyFrame,omitempty"`
	Crc             uint32     `protobuf:"varint,6,opt,name=crc,proto3" json:"crc,omitempty"`
	Time            int64      `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`
	Index           uint32     `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{2}
}

func (x *Packet) GetPacketType() PacketType {
	if x != nil {
		return x.PacketType
	}
	return PacketType_PacketVideo
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Packet) GetCompositionTime() int64 {
	if x != nil {
		return x.CompositionTime
	}
	return 0
}

func (x *Packet) GetTimeSample() uint64 {
	if x != nil {
		return x.TimeSample
	}
	return 0
}

func (x *Packet) GetIsKeyFrame() bool {
	if x != nil {
		return x.IsKeyFrame
	}
	return false
}

func (x *Packet) GetCrc() uint32 {
	if x != nil {
		return x.Crc
	}
	return 0
}

func (x *Packet) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Packet) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PacketChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index                     uint32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	StartTime                 int64     `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                   int64     `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	PacketCount               uint32    `protobuf:"varint,5,opt,name=packetCount,proto3" json:"packetCount,omitempty"`
	Packets                   []*Packet `protobuf:"bytes,6,rep,name=packets,proto3" json:"packets,omitempty"`
	PreviousChunkSize         uint32    `protobuf:"varint,7,opt,name=previousChunkSize,proto3" json:"previousChunkSize,omitempty"`
	PreviousChunkStartAddress uint32    `protobuf:"varint,8,opt,name=previousChunkStartAddress,proto3" json:"previousChunkStartAddress,omitempty"`
}

func (x *PacketChunk) Reset() {
	*x = PacketChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketChunk) ProtoMessage() {}

func (x *PacketChunk) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketChunk.ProtoReflect.Descriptor instead.
func (*PacketChunk) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{3}
}

func (x *PacketChunk) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PacketChunk) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PacketChunk) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PacketChunk) GetPacketCount() uint32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *PacketChunk) GetPackets() []*Packet {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *PacketChunk) GetPreviousChunkSize() uint32 {
	if x != nil {
		return x.PreviousChunkSize
	}
	return 0
}

func (x *PacketChunk) GetPreviousChunkStartAddress() uint32 {
	if x != nil {
		return x.PreviousChunkStartAddress
	}
	return 0
}

var File_media_proto protoreflect.FileDescriptor

var file_media_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x22, 0x49, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22,
	0x97, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x06, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4b, 0x65, 0x79, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4b, 0x65, 0x79,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x63, 0x72, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x92, 0x02, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0xb1, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x6e, 0x76, 0x69, 0x66, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x4f, 0x46, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x10, 0x06, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x10, 0x07, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_media_proto_rawDescOnce sync.Once
	file_media_proto_rawDescData = file_media_proto_rawDesc
)

func file_media_proto_rawDescGZIP() []byte {
	file_media_proto_rawDescOnce.Do(func() {
		file_media_proto_rawDescData = protoimpl.X.CompressGZIP(file_media_proto_rawDescData)
	})
	return file_media_proto_rawDescData
}

var file_media_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_media_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_media_proto_goTypes = []interface{}{
	(PacketType)(0),        // 0: media.PacketType
	(*Event)(nil),          // 1: media.Event
	(*PacketLocation)(nil), // 2: media.PacketLocation
	(*Packet)(nil),         // 3: media.Packet
	(*PacketChunk)(nil),    // 4: media.PacketChunk
}
var file_media_proto_depIdxs = []int32{
	2, // 0: media.Event.multiple_packets:type_name -> media.PacketLocation
	0, // 1: media.PacketLocation.frameType:type_name -> media.PacketType
	0, // 2: media.Packet.PacketType:type_name -> media.PacketType
	3, // 3: media.PacketChunk.packets:type_name -> media.Packet
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_media_proto_init() }
func file_media_proto_init() {
	if File_media_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_media_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_media_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_media_proto_goTypes,
		DependencyIndexes: file_media_proto_depIdxs,
		EnumInfos:         file_media_proto_enumTypes,
		MessageInfos:      file_media_proto_msgTypes,
	}.Build()
	File_media_proto = out.File
	file_media_proto_rawDesc = nil
	file_media_proto_goTypes = nil
	file_media_proto_depIdxs = nil
}
